{"version":3,"sources":["redux/actions.js","cacheManager.js","redux/store.js","redux/reducers.js","redux/selectors.js","utilities.js","components/BackToPreviousPageButton.jsx","components/WarriorCreator.jsx","components/HireDismissButton.jsx","components/WarriorTile.jsx","components/WarriorList.jsx","components/WarriorDetails.jsx","redux/fetch.js","components/Spinner.jsx","components/Error.jsx","components/BackToListButton.jsx","components/FourOhFour.jsx","components/WarriorCats.jsx","App.js","serviceWorker.js","index.js"],"names":["fetchWarriorsSuccess","warriors","type","setCache","initial","localStorage","setItem","JSON","stringify","Date","toUTCString","getCache","first","second","one","getFullYear","getMonth","getDate","two","days","getTime","Math","floor","daysBetween","getItem","removeItem","parse","initialState","pending","error","middlewares","thunk","createStore","state","action","increasedWarriors","map","warrior","id","hired","decreasedWarriors","remainingWarriors","filter","expandedWarriors","applyMiddleware","getWarriors","getWarriorsPending","getWarriorsError","getNextFreeID","max","parseInt","toString","cat","skill","weapon","shuffle","array","random","length","skillName","skillDescription","withStyles","backToList","color","classes","history","useHistory","className","onClick","goBack","connect","nextFreeId","dispatch","createWarrior","name","details","cancel","background","face","width","height","objectFit","desription","buttons","backgroundColor","useState","setName","setSkill","description","setDescription","image","setImage","goToWarriorsList","push","onSubmit","evt","preventDefault","console","log","value","onChange","e","target","hireWarrior","dismissWarrior","removeFromGang","addToGang","tile","alt","src","constainer","title","showBackButton","container","key","retireWarrior","retire","useParams","undefined","window","confirm","fetchWarriors","cachedWarriors","fetch","then","res","json","catch","fetchWarriorsError","Spinner","size","Error","FourOhFour","bindActionCreators","fetchWarriorsAction","strengthInNumbers","useEffect","to","x","exact","path","App","store","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b9ae157f.chunk.js","sourcesContent":["export const FETCH_WARRIORS_PENDING = 'FETCH_WARRIORS_PENDING';\nexport const FETCH_WARRIORS_SUCCESS = 'FETCH_WARRIORS_SUCCESS';\nexport const FETCH_WARRIORS_ERROR = 'FETCH_WARRIORS_ERROR';\nexport const HIRE_WARRIOR = 'HIRE_WARRIOR';\nexport const DISMISS_WARRIOR = 'DISMISS_WARRIOR';\nexport const RETIRE_WARRIOR = 'RETIRE_WARRIOR';\nexport const CREATE_WARRIOR = 'CREATE_WARRIOR';\n\nexport function fetchWarriorsPending() {\n    return {\n        type: FETCH_WARRIORS_PENDING\n    }\n}\n\nexport function fetchWarriorsSuccess(warriors) {\n    return {\n        type: FETCH_WARRIORS_SUCCESS,\n        warriors: warriors\n    }\n}\n\nexport function fetchWarriorsError(error) {\n    return {\n        type: FETCH_WARRIORS_ERROR,\n        error: error\n    }\n}\n\nexport function hireWarrior(warrior) {\n    return {\n        type: HIRE_WARRIOR,\n        warrior: warrior\n    }\n}\n\nexport function dismissWarrior(warrior) {\n    return {\n        type: DISMISS_WARRIOR,\n        warrior: warrior\n    }\n}\n\nexport function retireWarrior(warrior) {\n    return {\n        type: RETIRE_WARRIOR,\n        warrior: warrior\n    }\n}\nexport function createWarrior(warrior) {\n    return {\n        type: CREATE_WARRIOR,\n        warrior: warrior\n    }\n}\n","\n\n\n\nexport const setCache = (warriors, initial = false) => {\n    localStorage.setItem('catwarriors', JSON.stringify(warriors));\n    if (initial) localStorage.setItem('catwarriorsDate', (new Date()).toUTCString());\n}\n\nexport const getCache = () => {\n    const createdOn = new Date(localStorage.getItem('catwarriorsDate'));\n    const current = new Date();\n    if (daysBetween(createdOn, current) > 3) {\n        localStorage.removeItem('catwarriors');\n        localStorage.removeItem('catwarriorsDate');\n        return null;\n    }\n    return JSON.parse(localStorage.getItem('catwarriors'));\n}\n\n\n//From Stackoverflow by Ed Poor\nfunction daysBetween(first, second) {\n\n    // Copy date parts of the timestamps, discarding the time parts.\n    var one = new Date(first.getFullYear(), first.getMonth(), first.getDate());\n    var two = new Date(second.getFullYear(), second.getMonth(), second.getDate());\n\n    // Do the math.\n    var millisecondsPerDay = 1000 * 60 * 60 * 24;\n    var millisBetween = two.getTime() - one.getTime();\n    var days = millisBetween / millisecondsPerDay;\n\n    // Round down.\n    return Math.floor(days);\n}","import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nexport const initialState = {\n    pending: false,\n    warriors: [],\n    error: null\n}\n\nconst middlewares = [thunk];\n\nexport default createStore(rootReducer, initialState, applyMiddleware(...middlewares));\n","import {\n    FETCH_WARRIORS_PENDING, FETCH_WARRIORS_SUCCESS, FETCH_WARRIORS_ERROR,\n    HIRE_WARRIOR, DISMISS_WARRIOR, RETIRE_WARRIOR, CREATE_WARRIOR\n} from './actions';\nimport { initialState } from './store';\nimport { setCache } from '../cacheManager';\n\n\nexport default function RootReducer(state = initialState, action) {\n    switch (action.type) {\n        case FETCH_WARRIORS_PENDING:\n            return {\n                ...state,\n                pending: true\n            }\n        case FETCH_WARRIORS_SUCCESS:\n            return {\n                ...state,\n                pending: false,\n                warriors: action.warriors\n            }\n        case FETCH_WARRIORS_ERROR:\n            return {\n                ...state,\n                pending: false,\n                error: action.error\n            }\n        case HIRE_WARRIOR:\n            const increasedWarriors = state.warriors.map(warrior => {\n                if (warrior.id === action.warrior.id) {\n                    warrior.hired = true;\n                }\n                return { ...warrior };\n            });\n            setCache(increasedWarriors);\n            return {\n                ...state,\n                warriors: increasedWarriors\n            }\n        case DISMISS_WARRIOR:\n            const decreasedWarriors = state.warriors.map(warrior => {\n                if (warrior.id === action.warrior.id) {\n                    warrior.hired = false;\n                }\n                return { ...warrior };\n            });\n            setCache(decreasedWarriors);\n            return {\n                ...state,\n                warriors: decreasedWarriors\n            }\n        case RETIRE_WARRIOR:\n            const remainingWarriors = state.warriors.filter(warrior => warrior.id !== action.warrior.id);\n            setCache(remainingWarriors);\n            return {\n                ...state,\n                warriors: remainingWarriors\n            }\n        case CREATE_WARRIOR:\n            const expandedWarriors = [...state.warriors, action.warrior];\n            setCache(expandedWarriors);\n            return {\n                ...state,\n                warriors: expandedWarriors\n            }\n        default:\n            return state;\n    }\n}\n","export const getWarriors = state => state.warriors;\nexport const getWarriorsPending = state => state.pending;\nexport const getWarriorsError = state => state.error;\nexport const getWarriorByID = (state, id) => state.warriors.filter(warrior => warrior.id === id)[0];\nexport const getNextFreeID = state => (Math.max(...state.warriors.map(warrior => parseInt(warrior.id))) + 1).toString();","\nconst cat = ['Fluffy', 'Mephisto', 'Rumjack', 'Greebo', 'Crookshanks', 'Shadowfax', 'Garfield', 'Felix', 'Maurice', 'Sylvester', 'Azrael', 'Salem', 'Macavity'];\nconst skill = ['Skinny', 'Black', 'White', 'Purr', 'Fluffy', 'Sharp', 'Grumpy', 'Rattle', 'Ultimate', 'Fuzzy', 'Sneaky', 'Furrocious']\nconst weapon = ['stripe', 'paws', 'fang', 'claw', 'tail', 'purr', 'smell', 'cuddles', 'bite']\n\nconst shuffle = (array) => array[Math.floor(Math.random() * array.length)];\n\nexport const createRandomName = () => `${shuffle(cat)} ${shuffle(skill)}${shuffle(weapon)}`;\n\nconst skillName = ['Smell', 'Purr', 'Meow', 'Leap', 'Bite', 'Scratch', 'Snore', 'Sleep', 'Furball', 'Sneak']\nconst skillDescription = ['Doom', 'Destruction', 'Vegance', 'Destiny', 'Freedom', 'Glory', 'Purrification', 'Tail', 'Stripes', 'Revenge', 'Sayonara']\n\nexport const createRandomSkill = () => `${shuffle(skillName)} of ${shuffle(skillDescription)}`;","import React from 'react';\nimport withStyles from 'react-jss';\nimport { useHistory } from 'react-router-dom';\n\nconst styles = {\n    backToList: {\n        color: 'green'\n    },\n}\n\nfunction BackToPreviousPageButton({ classes }) {\n\n    const history = useHistory();\n    const goToPreviousPage = () => { history.goBack() };\n\n    return (\n        <>\n            <button className={classes.backToList} onClick={goToPreviousPage}>Back To Previous Page </button>\n        </>\n    );\n}\n\nexport default withStyles(styles)(BackToPreviousPageButton);","import React, { useState } from 'react';\n\nimport withStyles from 'react-jss';\nimport { connect } from 'react-redux';\nimport { createWarrior } from '../redux/actions';\nimport { getNextFreeID } from '../redux/selectors';\nimport { createRandomName, createRandomSkill } from '../utilities';\nimport BackToPreviousPageButton from './BackToPreviousPageButton';\nimport { useHistory } from 'react-router-dom';\nimport { classes } from 'istanbul-lib-coverage';\n\n// TODO:\n// Name; input/generate\n// Details: skill (input/generate), description, image\n// Buttons: create / cancel\n// CheckID/generateID\n\nconst styles = {\n    name: {\n\n    },\n    details: {\n\n    },\n    cancel: {\n        background: 'pink'\n    },\n    face: {\n        width: '200px',\n        height: '300px',\n        objectFit: 'contain',\n    },\n    desription: {\n\n    },\n    buttons: {\n        backgroundColor: 'yellow'\n    }\n}\n\n\nfunction WarriorCreator({ createWarrior, nextFreeId }) {\n    const [name, setName] = useState('');\n    const [skill, setSkill] = useState('');\n    const [description, setDescription] = useState('');\n    const [image, setImage] = useState('');\n\n    const history = useHistory();\n    const goToWarriorsList = () => { history.push(`/`) };\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        console.log(nextFreeId)\n        const warrior = { id: nextFreeId, name, skill, description, image }\n        createWarrior(warrior);\n        //TODO alert sucess,\n        goToWarriorsList();\n\n    }\n\n    return (\n        <div className='container'>\n            <BackToPreviousPageButton />\n            <h1>WARRIOR CREATOR</h1>\n\n            <form onSubmit={handleSubmit}>\n                <label>\n                    Name:\n                <input\n                        type='text'\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                    />\n                    <button type='button' onClick={() => setName(createRandomName())}>Generate Random</button>\n                </label>\n\n                <label>\n                    Skill:\n                <input\n                        type='text'\n                        value={skill}\n                        onChange={e => setSkill(e.target.value)}\n                    />\n                    <button type='button' onClick={() => setSkill(createRandomSkill())} > Generate Random </button>\n                </label>\n\n                <label>\n                    Description:\n                <input\n                        type='text'\n                        value={description}\n                        onChange={e => setDescription(e.target.value)}\n                    />\n                </label>\n\n                <label>\n                    Image URL:\n                <input\n                        type='text'\n                        value={image}\n                        onChange={e => setImage(e.target.value)}\n                    />\n                </label>\n\n                <input type='submit' value='Create' />\n                <input type='button' value='Cancel' className={classes.cancel} onClick={goToWarriorsList} />\n            </form>\n        </div>\n    );\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        createWarrior: (warrior) => dispatch(createWarrior(warrior)),\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    nextFreeId: getNextFreeID(state),\n})\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(WarriorCreator));\n","import React from 'react';\nimport withStyles from 'react-jss';\nimport { hireWarrior, dismissWarrior } from '../redux/actions'\nimport { connect } from 'react-redux';\n\nconst styles = {\n    removeFromGang: {\n        color: 'green'\n    },\n    addToGang: {\n        color: 'red'\n    }\n\n}\n\nfunction HireDismissButton({ warrior, classes, hireWarrior, dismissWarrior }) {\n    return (\n        <>\n            {\n                warrior.hired ?\n                    <button className={classes.removeFromGang} onClick={() => dismissWarrior(warrior)}>Dismiss</button> :\n                    <button className={classes.addToGang} onClick={() => hireWarrior(warrior)} >Hire</button>\n            }\n        </>\n    );\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        hireWarrior: (warrior) => dispatch(hireWarrior(warrior)),\n        dismissWarrior: (warrior) => dispatch(dismissWarrior(warrior))\n    }\n}\nexport default connect(\n    null,\n    mapDispatchToProps\n)(withStyles(styles)(HireDismissButton));","import React from 'react';\nimport withStyles from 'react-jss';\nimport HireDismissButton from './HireDismissButton';\nimport { useHistory } from 'react-router-dom'\n\n\nconst styles = {\n    name: {\n\n    },\n\n    buttons: {\n        backgroundColor: 'yellow'\n    },\n\n    face: {\n        width: '200px',\n        height: '300px',\n        objectFit: 'contain',\n    },\n    details: {\n\n    },\n    removeFromGang: {\n\n    },\n    addToGang: {\n\n    }\n\n}\n\nfunction WarriorTile({ warrior, classes }) {\n\n    const history = useHistory();\n    const goToDetails = () => { history.push(`/warrior/${warrior.id}`) };\n\n    return (\n        <div className={classes.tile}>\n            <h2 className={classes.name}>{warrior.name}</h2>\n            <img className={classes.face} alt='catface' src={warrior.image} />\n            <div className={classes.buttons}>\n                <button className={classes.details} onClick={goToDetails}>Details</button>\n                <HireDismissButton warrior={warrior} />\n            </div>\n        </div>\n    );\n}\n\nexport default withStyles(styles)(WarriorTile);","import React from 'react';\nimport withStyles from 'react-jss';\nimport WarriorTile from './WarriorTile';\nimport BackToPreviousPageButton from './BackToPreviousPageButton';\n\nconst styles = {\n    constainer: {\n\n    },\n    title: {\n\n    }\n}\n\nfunction WarriorList({ classes, warriors, title, showBackButton }) {\n\n    return (\n        <div className={classes.container}>\n            {showBackButton ? <BackToPreviousPageButton /> : ''}\n            <h3 className={classes.title}>{title}</h3>\n            {warriors.map((warrior, key) =>\n                <WarriorTile key={key} warrior={warrior} />\n            )}\n\n        </div>\n    );\n}\n\nexport default withStyles(styles)(WarriorList);","import React from 'react';\nimport withStyles from 'react-jss';\nimport HireDismissButton from './HireDismissButton';\nimport { getWarriors } from '../redux/selectors';\nimport { connect } from 'react-redux';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { retireWarrior } from '../redux/actions';\nimport BackToPreviousPageButton from './BackToPreviousPageButton';\n\nconst styles = {\n    backToList: {\n        background: 'pink'\n    },\n    name: {\n\n    },\n    details: {\n\n    },\n    skill: {\n\n    },\n    face: {\n        width: '200px',\n        height: '300px',\n        objectFit: 'contain',\n    },\n    desription: {\n\n    },\n    buttons: {\n        backgroundColor: 'yellow'\n    },\n    removeFromGang: {\n\n    },\n    addToGang: {\n\n    },\n    retire: {\n\n    }\n}\n\nfunction WarriorDetails({ classes, warriors, retireWarrior }) {\n\n    let { id } = useParams();\n    const warrior = warriors.filter(warrior => warrior.id === id)[0];\n\n    const history = useHistory();\n    const goToWarriorsList = () => { history.push(`/`) };\n\n    const retireAndRedirect = () => {\n        const r = window.confirm(\"Sure about retirement of this warrior?\"); //Future improvement: pop-up window instead of 'confirm'\n        if (r === true) {\n            retireWarrior(warrior);\n            goToWarriorsList();\n        }\n    };\n\n    if (warrior === undefined) {\n        history.push(`/Error404`)\n        return null;\n    }\n\n    return (\n        <div className={classes.container}>\n            <BackToPreviousPageButton />\n            <h2 className={classes.name}>{warrior.name}</h2>\n            <div className={classes.details}>\n                <img className={classes.face} alt='catface' src={warrior.image} />\n                <h3 className={classes.skill}>{warrior.skill}</h3>\n                <p className={classes.description}>{warrior.description}</p>\n            </div>\n            <div className={classes.buttons}>\n                <HireDismissButton warrior={warrior} />\n                <button className={classes.retire} onClick={retireAndRedirect}>Retire</button>\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    warriors: getWarriors(state),\n})\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        retireWarrior: (warrior) => dispatch(retireWarrior(warrior)),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(WarriorDetails));","import { fetchWarriorsPending, fetchWarriorsSuccess, fetchWarriorsError } from './actions';\nimport { setCache, getCache } from '../cacheManager';\n\nconst URL = 'https://run.mocky.io/v3/79dd242a-ebca-4998-bd55-e1d8a180b3ba';\n\nfunction fetchWarriors() {\n    const cachedWarriors = getCache();\n\n    if (cachedWarriors && cachedWarriors.length > 0) {\n        return dispatch => dispatch(fetchWarriorsSuccess(cachedWarriors));\n    }\n\n    return dispatch => {\n        dispatch(fetchWarriorsPending());\n        fetch(URL)\n            .then(res => res.json())\n            .then(res => {\n                if (res.error) {\n                    throw (res.error);\n                }\n                dispatch(fetchWarriorsSuccess(res));\n                setCache(res, true);\n                return res;\n            })\n            .catch(error => {\n                dispatch(fetchWarriorsError(error));\n            })\n    }\n}\n\nexport default fetchWarriors;","import React from 'react';\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nfunction Spinner() {\n    return (\n        <div className='spinner'>\n            <ClipLoader\n                size={150}\n                color={\"#123abc\"}\n            />\n        </div>\n    );\n}\n\nexport default Spinner;","import React from 'react';\n\nexport default function Error() {\n    return (\n        <div className=\"Error\">ZOMG ERROR</div>\n    )\n}","import React from 'react';\nimport withStyles from 'react-jss';\nimport { useHistory } from 'react-router-dom';\n\nconst styles = {\n    backToList: {\n        color: 'green'\n    },\n}\n\nfunction BackToListButton({ classes }) {\n\n    const history = useHistory();\n    const goToList = () => { history.push(`/`) };\n\n    return (\n        <>\n            <button className={classes.backToList} onClick={goToList}>Back To List </button>\n        </>\n    );\n}\n\nexport default withStyles(styles)(BackToListButton);","import React from 'react';\nimport BackToListButton from './BackToListButton';\n\nexport default function FourOhFour() {\n    return (\n        <>\n            <div className=\"Error\">404 ERROR</div>\n            <BackToListButton />\n        </>\n    )\n}\n\n\n","import React, { useEffect } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from 'react-router-dom';\nimport WarriorCreator from './WarriorCreator';\nimport WarriorList from './WarriorList';\nimport WarriorDetails from './WarriorDetails';\nimport { bindActionCreators } from 'redux';\nimport { getWarriorsPending, getWarriors, getWarriorsError } from '../redux/selectors';\nimport fetchWarriorsAction from '../redux/fetch';\nimport { connect } from 'react-redux';\nimport Spinner from './Spinner';\nimport Error from './Error';\nimport FourOhFour from './FourOhFour';\nimport withStyles from 'react-jss';\n\nconst styles = {\n    constainer: {\n\n    },\n    strengthInNumbers: {\n\n    }\n}\n\nfunction WarriorCats({ warriors, pending, error, fetchWarriors, classes }) {\n\n    useEffect(fetchWarriors, []);\n\n    return (\n        <Router>\n            <div>\n                <nav>\n                    <ul>\n                        <li>\n                            <Link to='/'>Home</Link>\n                        </li>\n                        <li>\n                            <Link to='/create'>Create New Warrior</Link>\n                        </li>\n                        <li>\n                            <Link to='/gang'>My Gang <span className={classes.strengthInNumbers}>{warriors.filter(x => x.hired).length}</span></Link>\n                        </li>\n                    </ul>\n                </nav>\n                {pending ? <Spinner /> : error ? <Error /> :\n                    <Switch>\n                        <Route exact path='/warrior/:id'>\n                            <WarriorDetails />\n                        </Route>\n                        <Route exact path='/create'>\n                            <WarriorCreator />\n                        </Route>\n                        <Route exact path='/gang'>\n                            <WarriorList showBackButton warriors={warriors.filter(x => x.hired)} title='My Gang' />\n                        </Route>\n                        <Route exact path='/'>\n                            <WarriorList warriors={warriors} title='List of Cats' />\n                        </Route>\n                        <Route>\n                            <FourOhFour />\n                        </Route>\n                    </Switch>\n                }\n            </div>\n        </Router>\n    );\n}\n\n\nconst mapStateToProps = state => ({\n    error: getWarriorsError(state),\n    warriors: getWarriors(state),\n    pending: getWarriorsPending(state)\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    fetchWarriors: fetchWarriorsAction\n}, dispatch)\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(WarriorCats));\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport store from './redux/store';\nimport WarriorCats from './components/WarriorCats'\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <WarriorCats />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}